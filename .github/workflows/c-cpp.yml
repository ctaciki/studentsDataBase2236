name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y libgtest-dev build-essential cmake gcovr lcov
      
    - name: Build Google Test
      run: |
        cd /usr/src/googletest
        sudo cmake -S . -B build
        sudo cmake --build build
        sudo cp build/lib/lib*.a /usr/lib
      
    - name: Compile with coverage
      run: g++ -std=c++14 -O0 -fprofile-arcs -ftest-coverage main.cpp -lgtest -lgtest_main -pthread -o test_program
      
    - name: Run tests
      run: ./test_program --run-tests
      
    - name: Generate coverage report
      run: |
        lcov --capture --directory . --output-file coverage.info --rc geninfo_unexecuted_blocks=1 --ignore-errors mismatch || true
        lcov --remove coverage.info '/usr/*' '*/gtest*' --output-file coverage.info || true
        lcov --list coverage.info || echo "Coverage report generation failed, proceeding with default value"
      
    - name: Extract coverage percentage
      id: coverage
      run: |
        PERCENT=$(lcov --list coverage.info 2>/dev/null | grep "lines" | awk '{print $2}' | sed 's/%//' | head -1 || echo "0")
        if [ -z "$PERCENT" ]; then PERCENT="0"; fi
        echo "COVERAGE=$PERCENT" >> $GITHUB_ENV
      
    - name: Create badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GITHUB_TOKEN }}  # Аутентификация для коммита
        filename: coverage.svg  # Прямой вывод SVG вместо JSON для Gist
        label: Test Coverage
        message: ${{ env.COVERAGE }}%
        color: green
        style: plastic
        # Убраны gistID и связанные параметры, так как не нужны
      
    - name: Commit badge to repository (if on main)
      if: github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add coverage.svg
        git commit -m "Update test coverage badge [skip ci]" || echo "No changes to commit"
        git push
